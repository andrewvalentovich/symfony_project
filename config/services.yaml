# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    cache_adapter: cache.adapter.filesystem
    article_uploads: 'uploads/articles'
    article_uploads_url: '%env(SITE_URL)%/%article_uploads%'
    article_uploads_dir: '%kernel.project_dir%/public/%article_uploads%'
    router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
    router.request_context.host: '%env(SITE_BASE_HOST)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            Demontpx\ParsedownBundle\Parsedown: '@demontpx_parsedown.parsedown'
            $markWordParameter: '%env(MARK_ARTICLE_WORDS_WITH_BOLD)%'
            League\Flysystem\FilesystemInterface $articleFileSystem: '@oneup_flysystem.uploads_articles_filesystem'

    # makes classes in src/ available to be used as servicesыы
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\MarkdownParser:
        arguments:
            $logger: '@monolog.logger.markdown'

monolog:
    channels: ['markdown']
    handlers:
        markdownLogger:
            type: stream
            path: "%kernel.logs_dir%/markdownLogger.log"
            level: debug
            channels: ["markdown"]